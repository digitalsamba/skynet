name: Deploy Skynet

on:
  push:
    branches:
      - less-memory-devel  # Change to your deployment branch if needed

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v5
        with:
          remove-android: 'true'
          remove-dotnet: 'true'
          remove-codeql: 'true'
          remove-swapfile: 'true'
          remove-large-packages: 'true'
          remove-haskell: 'true'
          #remove-cached-tools: 'true'

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

#      - name: Cache Docker layers
#        uses: actions/cache@v3
#        with:
#          path: /tmp/.buildx-cache
#          key: ${{ runner.os }}-buildx-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-buildx-

        #with:
        #  path: ~/.cache/pip
        #  key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-vllm.txt') }}
        #  restore-keys: |
        #    ${{ runner.os }}-pip-      

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

 #     - name: Build and Push Docker Image
 #       run: |
 #         docker buildx build \
 #           --build-arg BASE_IMAGE_BUILD=nvidia/cuda:12.2.2-cudnn8-devel-ubuntu22.04 \
 #           --build-arg BASE_IMAGE_RUN=nvidia/cuda:12.2.2-cudnn8-runtime-ubuntu22.04 \
 #           --cache-from=type=local,src=/tmp/.buildx-cache \
 #           --cache-to=type=local,dest=/tmp/.buildx-cache,mode=max \
 #           -t digitalsamba376/skynet:latest .
 #         docker push digitalsamba376/skynet:latest

      - name: Build and Push Docker Image
        run: |
          docker build -t digitalsamba376/skynet:less-memory-devel .
          docker push digitalsamba376/skynet:less-memory-devel