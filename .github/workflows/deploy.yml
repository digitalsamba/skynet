name: Deploy Skynet

on:
  push:
    branches:
      - master  # Change to your deployment branch if needed

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v5
        with:
          remove-android: 'true'
          remove-dotnet: 'true'
          remove-codeql: 'true'

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-      

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker buildx build \
            --build-arg BASE_IMAGE_BUILD=nvidia/cuda:12.2.2-cudnn8-devel-ubuntu22.04 \
            --build-arg BASE_IMAGE_RUN=nvidia/cuda:12.2.2-cudnn8-runtime-ubuntu22.04 \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache,mode=max \
            -t digitalsamba376/skynet:latest .
          docker push digitalsamba376/skynet:latest

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            
            sudo docker pull digitalsamba376/skynet:latest      

            sudo docker stop skynet-dev || true
            sudo docker rm skynet-dev || true
            sudo docker stop redis || true
            sudo docker rm redis || true
            sudo docker run -d --name redis -p 6379:6379 redis 

            sudo docker run -d --name skynet-dev --gpus all \
                                -v /opt/models:/models \
                                --env-file /opt/dev/.env \
                                --link redis \
                                -p 8000:8000 digitalsamba376/skynet:latest
